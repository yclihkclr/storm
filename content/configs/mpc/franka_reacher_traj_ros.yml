##
## MIT License
##
## Copyright (c) 2020-2021 NVIDIA CORPORATION.
##
## Permission is hereby granted, free of charge, to any person obtaining a
## copy of this software and associated documentation files (the "Software"),
## to deal in the Software without restriction, including without limitation
## the rights to use, copy, modify, merge, publish, distribute, sublicense,
## and/or sell copies of the Software, and to permit persons to whom the
## Software is furnished to do so, subject to the following conditions:
##
## The above copyright notice and this permission notice shall be included in
## all copies or substantial portions of the Software.
##
## THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
## IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
## FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
## THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
## LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
## FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
## DEALINGS IN THE SOFTWARE.##

# @package _global_
use_cuda: True
cuda_device_num: 0

control_dt: 0.02
run_open_loop: False
control_space: 'acc'
float_dtype: 'float32'
state_filter_coeff: {'position':0.1, 'velocity':0.0, 'acceleration':0.0}
cmd_filter_coeff: {'position':1.0, 'velocity':1.0, 'acceleration':0.0}

model:
  # any link that is not specified as learnable will be initialized from urdf
  urdf_path: "urdf/franka_description/franka_panda_no_gripper.urdf"
  learnable_rigid_body_config:
    learnable_links: []
  name: "franka_panda"
  max_acc: 5.0 
  dt: 0.02
  dt_traj_params:
    base_dt: 0.02
    base_ratio: 0.5
    max_dt: 0.2
  #control_freq: 10
  #sim_freq: 100
  ee_link_name: "ee_link"
  init_state: [-0.01779206, -0.76012354,  0.01978261, -2.34205014,  0.02984053, 1.54119353,  0.75344866] # coresponds to npinet
  link_names: ['panda_link2','panda_link3','panda_link4','panda_link5', 'panda_link6','panda_hand']
  #link_names: ['panda_link6']
  vel_scale: 1.0
  collision_spheres: '../robot/franka.yml'
  
  robot_collision_params:
    urdf: "urdf/franka_description/franka_panda_no_gripper.urdf"
    sample_points: 100
    link_objs: ['panda_link2', 'panda_link3','panda_link4','panda_link5', 'panda_link6','panda_hand']
    #link_objs: ['panda_link6']
    threshold: 0.35
    bounds: [[-0.5, -0.8, 0.0],[0.5,0.8,1.0]]
    collision_spheres: '../robot/franka.yml'
    self_collision_weights: 'robot_self/franka_self_sdf.pt'
    dof: 7

  world_collision_params:
    #model_path: '/home/bala/code/scenecollisionnet/weights/scene_coll_nn/'
    model_path: 'scene_coll_nn/'
    label_map: {'robot':2, 'ground':0}
    bounds: [[-1.0, -1.0, -0.2],[1.0,1.0,1.0]]
    #bounds: [[-0.5, -0.8, 0.0],[0.5,0.8,1.0]]
    grid_resolution: 0.05


cost:
  goal_pose:
    vec_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
    weight: [15.0, 100.0]
    position_gaussian_params: {'n':0, 'c':0.0, 's':0.0, 'r':10.0}
    orientation_gaussian_params: {'n':0, 'c':0.0, 's':0.0, 'r':10.0}
    hinge_val: -1
    convergence_val: [0.0, 0.0] # orientation, position

  zero_vel:
    weight: 0.0
    hinge_val: 0.2 #0.2
    gaussian_params: {'n':0, 'c':0.2, 's':0, 'r':1.0}

  zero_acc:
    weight: 0.0 #0.01
    hinge_val: -1.0
    gaussian_params: {'n':0, 'c':0.2, 's':0, 'r':5.0}
  
  collision:
    weight: 0.0
    gaussian_params: {'n':0, 'c':0.5, 's':0, 'r':5.0}
    
  primitive_collision:
    weight: 5000.0
    distance_threshold: 0.02
    gaussian_params: {'n':0, 'c':0.0, 's':0, 'r':10.0}

  robot_self_collision:
    weight: 5000.0
    distance_threshold: 0.05
    gaussian_params: {'n':0, 'c':0.0, 's':0, 'r':10.0}
    

  null_space:
    weight: 1.0 #0.01 #0.05 #0.5 #1.0
    gaussian_params: {'n':0, 'c':0.0, 's':0, 'r':1.0}
    vec_weight: [1.0, 1.0, 1.0, 1.0, 1.0, 0.5, 0.5]
    #retract_state : [-1.57, -1.2, 1.9, -1.383, -1.57, 0.00]
  manipulability:
    weight: 30.0 #100.0 #0.05 #0.5 #1.0
    gaussian_params: {'n':0, 'c':0.0, 's':0, 'r':10.0}
    thresh: 0.03

  joint_l2:
    weight: 1.0
    gaussian_params: {'n':0, 'c':0.2, 's':0, 'r':5.0}

  ee_vel:
    weight: 0.0
    vec_weight: [1.0, 1.0, 1.0] #, 0.0, 0.0, 0.0]
    gaussian_params: {'n':0, 'c':0.0, 's':0.0, 'r':5.0}
    
  scene_collision:
    weight: 000.0 #5000.0
    gaussian_params: {'n':0, 'c':0.0, 's':0, 'r':10.0}
    #threshold: 0.35
    
  stop_cost:
    weight: 100.0
    max_nlimit: 1.5 #0.2
    gaussian_params: {'n':0, 'c':0.0, 's':0, 'r':1.0}

  stop_cost_acc:
    weight: 0.0
    max_limit: 0.1 #0.2
    gaussian_params: {'n':0, 'c':0.0, 's':0, 'r':1.0}


  voxel_collision:
    weight: 000.0 #5000.0
    gaussian_params: {'n':0, 'c':0.0, 's':0, 'r':100.0}
    distance_threshold: 0.05
    grid_resolution: 0.05

  smooth: # on robot acceleration
    weight: 0.0 
    gaussian_params: {'n':0, 'c':0.2, 's':0, 'r':10.0}
    order: 1
  state_bound:
    weight: 1000.0 
    gaussian_params: {'n':0, 'c':0.0, 's':0, 'r':10.0}
    bound_thresh: 0.05
  
  final_traj_cost:
    weight: 25.0
    gaussian_params: {'n':0, 'c':0.2, 's':0, 'r':5.0}
    last_point_only: False

  ref_traj_cost:
    weight: 50.0
    gaussian_params: {'n':0, 'c':0.2, 's':0, 'r':5.0}


  retract_state : [0.00, 0.0, 0.00, -1.5, 0.00, 2.0, 0.0]
  retract_weight: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0,0.0]

mppi:
  horizon           : 30
  init_cov          : 0.005 #.5 #.5
  gamma             : 0.98
  n_iters           : 3
  step_size_mean    : 0.98
  step_size_cov     : 0.7
  beta              : 1.0
  alpha             : 1
  num_particles     : 500 #10000
  update_cov        : False
  cov_type          : 'diag_AxA' # 
  kappa             : 0.005
  null_act_frac     : 0.01
  sample_mode       : 'mean'
  base_action       : 'repeat'
  squash_fn         : 'clamp'
  hotstart          : True
  visual_traj       : 'ee_pos_seq'
  sample_params:
    type: 'multiple'
    fixed_samples: True
    sample_ratio: {'halton':0.0, 'halton-knot':1.0, 'random':0.0, 'random-knot':0.0}
    seed: 0
    filter_coeffs: None #[0.3, 0.3, 0.4]
    knot_scale: 4
